// Code generated by go-jsonschema. DO NOT EDIT.

package structs

import "encoding/json"

type Gender struct {
	ID                    int64  `json:"id"`
	Name                  string `json:"name"`
	PokemonSpeciesDetails []struct {
		PokemonSpecies NamedApiResource `json:"pokemon_species"`
		Rate           int64            `json:"rate"`
	} `json:"pokemon_species_details"`
	RequiredForEvolution []NamedApiResource `json:"required_for_evolution"`
}

type EncounterMethod struct {
	ID    int64  `json:"id"`
	Name  string `json:"name"`
	Names []Name `json:"names"`
	Order int64  `json:"order"`
}

type PokemonForm struct {
	FormName     string           `json:"form_name"`
	FormNames    []Name           `json:"form_names"`
	FormOrder    int64            `json:"form_order"`
	ID           int64            `json:"id"`
	IsBattleOnly bool             `json:"is_battle_only"`
	IsDefault    bool             `json:"is_default"`
	IsMega       bool             `json:"is_mega"`
	Name         string           `json:"name"`
	Names        []Name           `json:"names"`
	Order        int64            `json:"order"`
	Pokemon      NamedApiResource `json:"pokemon"`
	Sprites      struct {
		BackDefault      *string `json:"back_default"`
		BackFemale       *string `json:"back_female"`
		BackShiny        *string `json:"back_shiny"`
		BackShinyFemale  *string `json:"back_shiny_female"`
		FrontDefault     *string `json:"front_default"`
		FrontFemale      *string `json:"front_female"`
		FrontShiny       *string `json:"front_shiny"`
		FrontShinyFemale *string `json:"front_shiny_female"`
	} `json:"sprites"`
	Types []struct {
		Slot int64            `json:"slot"`
		Type NamedApiResource `json:"type"`
	} `json:"types"`
	VersionGroup NamedApiResource `json:"version_group"`
}

type SuperContestEffect struct {
	Appeal            int64              `json:"appeal"`
	FlavorTextEntries []FlavorText       `json:"flavor_text_entries"`
	ID                int64              `json:"id"`
	Moves             []NamedApiResource `json:"moves"`
}

type Pokedex struct {
	Descriptions   []Description `json:"descriptions"`
	ID             int64         `json:"id"`
	IsMainSeries   bool          `json:"is_main_series"`
	Name           string        `json:"name"`
	Names          []Name        `json:"names"`
	PokemonEntries []struct {
		EntryNumber    int64            `json:"entry_number"`
		PokemonSpecies NamedApiResource `json:"pokemon_species"`
	} `json:"pokemon_entries"`
	Region        *NamedApiResource  `json:"region"`
	VersionGroups []NamedApiResource `json:"version_groups"`
}

type PokemonSpecies struct {
	BaseHappiness      *int64             `json:"base_happiness"`
	CaptureRate        int64              `json:"capture_rate"`
	Color              NamedApiResource   `json:"color"`
	EggGroups          []NamedApiResource `json:"egg_groups"`
	EvolutionChain     ApiResource        `json:"evolution_chain"`
	EvolvesFromSpecies *NamedApiResource  `json:"evolves_from_species"`
	FlavorTextEntries  []struct {
		FlavorText string           `json:"flavor_text"`
		Language   NamedApiResource `json:"language"`
		Version    NamedApiResource `json:"version"`
	} `json:"flavor_text_entries"`
	FormDescriptions []Description `json:"form_descriptions"`
	FormsSwitchable  bool          `json:"forms_switchable"`
	GenderRate       int64         `json:"gender_rate"`
	Genera           []struct {
		Genus    string           `json:"genus"`
		Language NamedApiResource `json:"language"`
	} `json:"genera"`
	Generation           NamedApiResource  `json:"generation"`
	GrowthRate           NamedApiResource  `json:"growth_rate"`
	Habitat              *NamedApiResource `json:"habitat"`
	HasGenderDifferences bool              `json:"has_gender_differences"`
	HatchCounter         *int64            `json:"hatch_counter"`
	ID                   int64             `json:"id"`
	IsBaby               bool              `json:"is_baby"`
	IsLegendary          bool              `json:"is_legendary"`
	IsMythical           bool              `json:"is_mythical"`
	Name                 string            `json:"name"`
	Names                []Name            `json:"names"`
	Order                int64             `json:"order"`
	PalParkEncounters    []struct {
		Area      NamedApiResource `json:"area"`
		BaseScore int64            `json:"base_score"`
		Rate      int64            `json:"rate"`
	} `json:"pal_park_encounters"`
	PokedexNumbers []struct {
		EntryNumber int64            `json:"entry_number"`
		Pokedex     NamedApiResource `json:"pokedex"`
	} `json:"pokedex_numbers"`
	Shape     *NamedApiResource `json:"shape"`
	Varieties []struct {
		IsDefault bool             `json:"is_default"`
		Pokemon   NamedApiResource `json:"pokemon"`
	} `json:"varieties"`
}

type Effect struct {
	Effect   string           `json:"effect"`
	Language NamedApiResource `json:"language"`
}

type Type struct {
	DamageRelations struct {
		DoubleDamageFrom []NamedApiResource `json:"double_damage_from"`
		DoubleDamageTo   []NamedApiResource `json:"double_damage_to"`
		HalfDamageFrom   []NamedApiResource `json:"half_damage_from"`
		HalfDamageTo     []NamedApiResource `json:"half_damage_to"`
		NoDamageFrom     []NamedApiResource `json:"no_damage_from"`
		NoDamageTo       []NamedApiResource `json:"no_damage_to"`
	} `json:"damage_relations"`
	GameIndices         []GenerationGameIndex `json:"game_indices"`
	Generation          NamedApiResource      `json:"generation"`
	ID                  int64                 `json:"id"`
	MoveDamageClass     *NamedApiResource     `json:"move_damage_class"`
	Moves               []NamedApiResource    `json:"moves"`
	Name                string                `json:"name"`
	Names               []Name                `json:"names"`
	PastDamageRelations []struct {
		DamageRelations struct {
			DoubleDamageFrom []NamedApiResource `json:"double_damage_from"`
			DoubleDamageTo   []NamedApiResource `json:"double_damage_to"`
			HalfDamageFrom   []NamedApiResource `json:"half_damage_from"`
			HalfDamageTo     []NamedApiResource `json:"half_damage_to"`
			NoDamageFrom     []NamedApiResource `json:"no_damage_from"`
			NoDamageTo       []NamedApiResource `json:"no_damage_to"`
		} `json:"damage_relations"`
		Generation NamedApiResource `json:"generation"`
	} `json:"past_damage_relations"`
	Pokemon []struct {
		Pokemon NamedApiResource `json:"pokemon"`
		Slot    int64            `json:"slot"`
	} `json:"pokemon"`
}

type VerboseEffect struct {
	Effect      string           `json:"effect"`
	Language    NamedApiResource `json:"language"`
	ShortEffect string           `json:"short_effect"`
}

type PokeathlonStat struct {
	AffectingNatures struct {
		Decrease []struct {
			MaxChange int64            `json:"max_change"`
			Nature    NamedApiResource `json:"nature"`
		} `json:"decrease"`
		Increase []struct {
			MaxChange int64            `json:"max_change"`
			Nature    NamedApiResource `json:"nature"`
		} `json:"increase"`
	} `json:"affecting_natures"`
	ID    int64  `json:"id"`
	Name  string `json:"name"`
	Names []Name `json:"names"`
}

type Version struct {
	ID           int64            `json:"id"`
	Name         string           `json:"name"`
	Names        []Name           `json:"names"`
	VersionGroup NamedApiResource `json:"version_group"`
}

type FlavorText struct {
	FlavorText string           `json:"flavor_text"`
	Language   NamedApiResource `json:"language"`
}

type Move struct {
	Accuracy      *int64 `json:"accuracy"`
	ContestCombos *struct {
		Normal struct {
			UseAfter  []NamedApiResource `json:"use_after"`
			UseBefore []NamedApiResource `json:"use_before"`
		} `json:"normal"`
		Super struct {
			UseAfter  []NamedApiResource `json:"use_after"`
			UseBefore []NamedApiResource `json:"use_before"`
		} `json:"super"`
	} `json:"contest_combos"`
	ContestEffect *ApiResource      `json:"contest_effect"`
	ContestType   *NamedApiResource `json:"contest_type"`
	DamageClass   NamedApiResource  `json:"damage_class"`
	EffectChance  *int64            `json:"effect_chance"`
	EffectChanges []struct {
		EffectEntries []Effect         `json:"effect_entries"`
		VersionGroup  NamedApiResource `json:"version_group"`
	} `json:"effect_changes"`
	EffectEntries     []VerboseEffect `json:"effect_entries"`
	FlavorTextEntries []struct {
		FlavorText   string           `json:"flavor_text"`
		Language     NamedApiResource `json:"language"`
		VersionGroup NamedApiResource `json:"version_group"`
	} `json:"flavor_text_entries"`
	Generation       NamedApiResource       `json:"generation"`
	ID               int64                  `json:"id"`
	LearnedByPokemon []NamedApiResource     `json:"learned_by_pokemon"`
	Machines         []MachineVersionDetail `json:"machines"`
	Meta             *struct {
		Ailment       NamedApiResource `json:"ailment"`
		AilmentChance int64            `json:"ailment_chance"`
		Category      NamedApiResource `json:"category"`
		CritRate      int64            `json:"crit_rate"`
		Drain         int64            `json:"drain"`
		FlinchChance  int64            `json:"flinch_chance"`
		Healing       int64            `json:"healing"`
		MaxHits       *int64           `json:"max_hits"`
		MaxTurns      *int64           `json:"max_turns"`
		MinHits       *int64           `json:"min_hits"`
		MinTurns      *int64           `json:"min_turns"`
		StatChance    int64            `json:"stat_chance"`
	} `json:"meta"`
	Name       string `json:"name"`
	Names      []Name `json:"names"`
	PastValues []struct {
		Accuracy      *int64            `json:"accuracy"`
		EffectChance  *int64            `json:"effect_chance"`
		EffectEntries []VerboseEffect   `json:"effect_entries"`
		Power         *int64            `json:"power"`
		Pp            *int64            `json:"pp"`
		Type          *NamedApiResource `json:"type"`
		VersionGroup  NamedApiResource  `json:"version_group"`
	} `json:"past_values"`
	Power       *int64 `json:"power"`
	Pp          *int64 `json:"pp"`
	Priority    int64  `json:"priority"`
	StatChanges []struct {
		Change int64            `json:"change"`
		Stat   NamedApiResource `json:"stat"`
	} `json:"stat_changes"`
	SuperContestEffect *ApiResource     `json:"super_contest_effect"`
	Target             NamedApiResource `json:"target"`
	Type               NamedApiResource `json:"type"`
}

type LocationArea struct {
	EncounterMethodRates []struct {
		EncounterMethod NamedApiResource `json:"encounter_method"`
		VersionDetails  []struct {
			Rate    int64            `json:"rate"`
			Version NamedApiResource `json:"version"`
		} `json:"version_details"`
	} `json:"encounter_method_rates"`
	GameIndex         int64            `json:"game_index"`
	ID                int64            `json:"id"`
	Location          NamedApiResource `json:"location"`
	Name              string           `json:"name"`
	Names             []Name           `json:"names"`
	PokemonEncounters []struct {
		Pokemon        NamedApiResource         `json:"pokemon"`
		VersionDetails []VersionEncounterDetail `json:"version_details"`
	} `json:"pokemon_encounters"`
}

type Item struct {
	Attributes        []NamedApiResource       `json:"attributes"`
	BabyTriggerFor    *ApiResource             `json:"baby_trigger_for"`
	Category          NamedApiResource         `json:"category"`
	Cost              int64                    `json:"cost"`
	EffectEntries     []VerboseEffect          `json:"effect_entries"`
	FlavorTextEntries []VersionGroupFlavorText `json:"flavor_text_entries"`
	FlingEffect       *NamedApiResource        `json:"fling_effect"`
	FlingPower        *int64                   `json:"fling_power"`
	GameIndices       []GenerationGameIndex    `json:"game_indices"`
	HeldByPokemon     []struct {
		Pokemon        NamedApiResource `json:"pokemon"`
		VersionDetails []struct {
			Rarity  int64            `json:"rarity"`
			Version NamedApiResource `json:"version"`
		} `json:"version_details"`
	} `json:"held_by_pokemon"`
	ID       int64                  `json:"id"`
	Machines []MachineVersionDetail `json:"machines"`
	Name     string                 `json:"name"`
	Names    []Name                 `json:"names"`
	Sprites  struct {
		Default *string `json:"default"`
	} `json:"sprites"`
}

type ApiResourceList struct {
	Count    int64         `json:"count"`
	Next     *string       `json:"next"`
	Previous *string       `json:"previous"`
	Results  []ApiResource `json:"results"`
}

type Machine struct {
	ID           int64            `json:"id"`
	Item         NamedApiResource `json:"item"`
	Move         NamedApiResource `json:"move"`
	VersionGroup NamedApiResource `json:"version_group"`
}

type EncounterConditionValue struct {
	Condition NamedApiResource `json:"condition"`
	ID        int64            `json:"id"`
	Name      string           `json:"name"`
	Names     []Name           `json:"names"`
}

type EncounterCondition struct {
	ID     int64              `json:"id"`
	Name   string             `json:"name"`
	Names  []Name             `json:"names"`
	Values []NamedApiResource `json:"values"`
}

type MoveDamageClass struct {
	Descriptions []Description      `json:"descriptions"`
	ID           int64              `json:"id"`
	Moves        []NamedApiResource `json:"moves"`
	Name         string             `json:"name"`
	Names        []Name             `json:"names"`
}

type Berry struct {
	Firmness NamedApiResource `json:"firmness"`
	Flavors  []struct {
		Flavor  NamedApiResource `json:"flavor"`
		Potency int64            `json:"potency"`
	} `json:"flavors"`
	GrowthTime       int64            `json:"growth_time"`
	ID               int64            `json:"id"`
	Item             NamedApiResource `json:"item"`
	MaxHarvest       int64            `json:"max_harvest"`
	Name             string           `json:"name"`
	NaturalGiftPower int64            `json:"natural_gift_power"`
	NaturalGiftType  NamedApiResource `json:"natural_gift_type"`
	Size             int64            `json:"size"`
	Smoothness       int64            `json:"smoothness"`
	SoilDryness      int64            `json:"soil_dryness"`
}

type Location struct {
	Areas       []NamedApiResource    `json:"areas"`
	GameIndices []GenerationGameIndex `json:"game_indices"`
	ID          int64                 `json:"id"`
	Name        string                `json:"name"`
	Names       []Name                `json:"names"`
	Region      *NamedApiResource     `json:"region"`
}

type Encounter struct {
	Chance          int64              `json:"chance"`
	ConditionValues []NamedApiResource `json:"condition_values"`
	MaxLevel        int64              `json:"max_level"`
	Method          NamedApiResource   `json:"method"`
	MinLevel        int64              `json:"min_level"`
}

type ItemAttribute struct {
	Descriptions []Description      `json:"descriptions"`
	ID           int64              `json:"id"`
	Items        []NamedApiResource `json:"items"`
	Name         string             `json:"name"`
	Names        []Name             `json:"names"`
}

type MoveAilment struct {
	ID    int64              `json:"id"`
	Moves []NamedApiResource `json:"moves"`
	Name  string             `json:"name"`
	Names []Name             `json:"names"`
}

type MoveAilment1 struct {
	ID    int64              `json:"id"`
	Moves []NamedApiResource `json:"moves"`
	Name  string             `json:"name"`
	Names []Name             `json:"names"`
}

type PokemonShape struct {
	AwesomeNames []struct {
		AwesomeName string           `json:"awesome_name"`
		Language    NamedApiResource `json:"language"`
	} `json:"awesome_names"`
	ID             int64              `json:"id"`
	Name           string             `json:"name"`
	Names          []Name             `json:"names"`
	PokemonSpecies []NamedApiResource `json:"pokemon_species"`
}

type ItemPocket struct {
	Categories []NamedApiResource `json:"categories"`
	ID         int64              `json:"id"`
	Name       string             `json:"name"`
	Names      []Name             `json:"names"`
}

type ItemCategory struct {
	ID     int64              `json:"id"`
	Items  []NamedApiResource `json:"items"`
	Name   string             `json:"name"`
	Names  []Name             `json:"names"`
	Pocket NamedApiResource   `json:"pocket"`
}

type ContestEffect struct {
	Appeal            int64        `json:"appeal"`
	EffectEntries     []Effect     `json:"effect_entries"`
	FlavorTextEntries []FlavorText `json:"flavor_text_entries"`
	ID                int64        `json:"id"`
	Jam               int64        `json:"jam"`
}

type EvolutionChain struct {
	BabyTriggerItem *NamedApiResource `json:"baby_trigger_item"`
	Chain           struct {
		EvolutionDetails []json.RawMessage `json:"evolution_details"`
		EvolvesTo        []struct {
			EvolutionDetails []struct {
				Gender                *int64            `json:"gender"`
				HeldItem              *NamedApiResource `json:"held_item"`
				Item                  *NamedApiResource `json:"item"`
				KnownMove             *NamedApiResource `json:"known_move"`
				KnownMoveType         *NamedApiResource `json:"known_move_type"`
				Location              *NamedApiResource `json:"location"`
				MinAffection          *int64            `json:"min_affection"`
				MinBeauty             *int64            `json:"min_beauty"`
				MinHappiness          *int64            `json:"min_happiness"`
				MinLevel              *int64            `json:"min_level"`
				NeedsOverworldRain    bool              `json:"needs_overworld_rain"`
				PartySpecies          *NamedApiResource `json:"party_species"`
				PartyType             *NamedApiResource `json:"party_type"`
				RelativePhysicalStats *int64            `json:"relative_physical_stats"`
				TimeOfDay             string            `json:"time_of_day"`
				TradeSpecies          *NamedApiResource `json:"trade_species"`
				Trigger               NamedApiResource  `json:"trigger"`
				TurnUpsideDown        bool              `json:"turn_upside_down"`
			} `json:"evolution_details"`
			EvolvesTo []struct {
				EvolutionDetails []struct {
					Gender                *int64            `json:"gender"`
					HeldItem              *NamedApiResource `json:"held_item"`
					Item                  *NamedApiResource `json:"item"`
					KnownMove             *NamedApiResource `json:"known_move"`
					KnownMoveType         struct{}          `json:"known_move_type"`
					Location              *NamedApiResource `json:"location"`
					MinAffection          struct{}          `json:"min_affection"`
					MinBeauty             struct{}          `json:"min_beauty"`
					MinHappiness          *int64            `json:"min_happiness"`
					MinLevel              *int64            `json:"min_level"`
					NeedsOverworldRain    bool              `json:"needs_overworld_rain"`
					PartySpecies          struct{}          `json:"party_species"`
					PartyType             struct{}          `json:"party_type"`
					RelativePhysicalStats struct{}          `json:"relative_physical_stats"`
					TimeOfDay             string            `json:"time_of_day"`
					TradeSpecies          struct{}          `json:"trade_species"`
					Trigger               NamedApiResource  `json:"trigger"`
					TurnUpsideDown        bool              `json:"turn_upside_down"`
				} `json:"evolution_details"`
				EvolvesTo []json.RawMessage `json:"evolves_to"`
				IsBaby    bool              `json:"is_baby"`
				Species   NamedApiResource  `json:"species"`
			} `json:"evolves_to"`
			IsBaby  bool             `json:"is_baby"`
			Species NamedApiResource `json:"species"`
		} `json:"evolves_to"`
		IsBaby  bool             `json:"is_baby"`
		Species NamedApiResource `json:"species"`
	} `json:"chain"`
	ID int64 `json:"id"`
}

type NamedApiResource struct {
	Name string `json:"name"`
	URL  string `json:"url"`
}

type BerryFlavor struct {
	Berries []struct {
		Berry   NamedApiResource `json:"berry"`
		Potency int64            `json:"potency"`
	} `json:"berries"`
	ContestType NamedApiResource `json:"contest_type"`
	ID          int64            `json:"id"`
	Name        string           `json:"name"`
	Names       []Name           `json:"names"`
}

type Name struct {
	Language NamedApiResource `json:"language"`
	Name     string           `json:"name"`
}

type BerryFirmness struct {
	Berries []NamedApiResource `json:"berries"`
	ID      int64              `json:"id"`
	Name    string             `json:"name"`
	Names   []Name             `json:"names"`
}

type Language struct {
	ID       int64  `json:"id"`
	Iso3166  string `json:"iso3166"`
	Iso639   string `json:"iso639"`
	Name     string `json:"name"`
	Names    []Name `json:"names"`
	Official bool   `json:"official"`
}

type Characteristic struct {
	Descriptions   []Description    `json:"descriptions"`
	GeneModulo     int64            `json:"gene_modulo"`
	HighestStat    NamedApiResource `json:"highest_stat"`
	ID             int64            `json:"id"`
	PossibleValues []int64          `json:"possible_values"`
}

type EvolutionTrigger struct {
	ID             int64              `json:"id"`
	Name           string             `json:"name"`
	Names          []Name             `json:"names"`
	PokemonSpecies []NamedApiResource `json:"pokemon_species"`
}

type PokemonColor struct {
	ID             int64              `json:"id"`
	Name           string             `json:"name"`
	Names          []Name             `json:"names"`
	PokemonSpecies []NamedApiResource `json:"pokemon_species"`
}

type Description struct {
	Description string           `json:"description"`
	Language    NamedApiResource `json:"language"`
}

type GrowthRate struct {
	Descriptions []Description `json:"descriptions"`
	Formula      string        `json:"formula"`
	ID           int64         `json:"id"`
	Levels       []struct {
		Experience int64 `json:"experience"`
		Level      int64 `json:"level"`
	} `json:"levels"`
	Name           string             `json:"name"`
	PokemonSpecies []NamedApiResource `json:"pokemon_species"`
}

type NamedApiResourceList struct {
	Count    int64              `json:"count"`
	Next     *string            `json:"next"`
	Previous *string            `json:"previous"`
	Results  []NamedApiResource `json:"results"`
}

type Generation struct {
	Abilities      []NamedApiResource `json:"abilities"`
	ID             int64              `json:"id"`
	MainRegion     NamedApiResource   `json:"main_region"`
	Moves          []NamedApiResource `json:"moves"`
	Name           string             `json:"name"`
	Names          []Name             `json:"names"`
	PokemonSpecies []NamedApiResource `json:"pokemon_species"`
	Types          []NamedApiResource `json:"types"`
	VersionGroups  []NamedApiResource `json:"version_groups"`
}

type VersionGroup struct {
	Generation       NamedApiResource   `json:"generation"`
	ID               int64              `json:"id"`
	MoveLearnMethods []NamedApiResource `json:"move_learn_methods"`
	Name             string             `json:"name"`
	Order            int64              `json:"order"`
	Pokedexes        []NamedApiResource `json:"pokedexes"`
	Regions          []NamedApiResource `json:"regions"`
	Versions         []NamedApiResource `json:"versions"`
}

type MachineVersionDetail struct {
	Machine      ApiResource      `json:"machine"`
	VersionGroup NamedApiResource `json:"version_group"`
}

type VersionGroupFlavorText struct {
	Language     NamedApiResource `json:"language"`
	Text         string           `json:"text"`
	VersionGroup NamedApiResource `json:"version_group"`
}

type EggGroup struct {
	ID             int64              `json:"id"`
	Name           string             `json:"name"`
	Names          []Name             `json:"names"`
	PokemonSpecies []NamedApiResource `json:"pokemon_species"`
}

type Ability struct {
	EffectChanges []struct {
		EffectEntries []Effect         `json:"effect_entries"`
		VersionGroup  NamedApiResource `json:"version_group"`
	} `json:"effect_changes"`
	EffectEntries     []VerboseEffect `json:"effect_entries"`
	FlavorTextEntries []struct {
		FlavorText   string           `json:"flavor_text"`
		Language     NamedApiResource `json:"language"`
		VersionGroup NamedApiResource `json:"version_group"`
	} `json:"flavor_text_entries"`
	Generation   NamedApiResource `json:"generation"`
	ID           int64            `json:"id"`
	IsMainSeries bool             `json:"is_main_series"`
	Name         string           `json:"name"`
	Names        []Name           `json:"names"`
	Pokemon      []struct {
		IsHidden bool             `json:"is_hidden"`
		Pokemon  NamedApiResource `json:"pokemon"`
		Slot     int64            `json:"slot"`
	} `json:"pokemon"`
}

type MoveBattleStyle struct {
	ID    int64  `json:"id"`
	Name  string `json:"name"`
	Names []Name `json:"names"`
}

type ContestType struct {
	BerryFlavor NamedApiResource `json:"berry_flavor"`
	ID          int64            `json:"id"`
	Name        string           `json:"name"`
	Names       []struct {
		Color    string           `json:"color"`
		Language NamedApiResource `json:"language"`
		Name     string           `json:"name"`
	} `json:"names"`
}

type GenerationGameIndex struct {
	GameIndex  int64            `json:"game_index"`
	Generation NamedApiResource `json:"generation"`
}

type Nature struct {
	DecreasedStat              *NamedApiResource `json:"decreased_stat"`
	HatesFlavor                *NamedApiResource `json:"hates_flavor"`
	ID                         int64             `json:"id"`
	IncreasedStat              *NamedApiResource `json:"increased_stat"`
	LikesFlavor                *NamedApiResource `json:"likes_flavor"`
	MoveBattleStylePreferences []struct {
		HighHpPreference int64            `json:"high_hp_preference"`
		LowHpPreference  int64            `json:"low_hp_preference"`
		MoveBattleStyle  NamedApiResource `json:"move_battle_style"`
	} `json:"move_battle_style_preferences"`
	Name                  string `json:"name"`
	Names                 []Name `json:"names"`
	PokeathlonStatChanges []struct {
		MaxChange      int64            `json:"max_change"`
		PokeathlonStat NamedApiResource `json:"pokeathlon_stat"`
	} `json:"pokeathlon_stat_changes"`
}

type MoveLearnMethod struct {
	Descriptions  []Description      `json:"descriptions"`
	ID            int64              `json:"id"`
	Name          string             `json:"name"`
	Names         []Name             `json:"names"`
	VersionGroups []NamedApiResource `json:"version_groups"`
}

type ItemFlingEffect struct {
	EffectEntries []Effect           `json:"effect_entries"`
	ID            int64              `json:"id"`
	Items         []NamedApiResource `json:"items"`
	Name          string             `json:"name"`
}

type Region struct {
	ID             int64              `json:"id"`
	Locations      []NamedApiResource `json:"locations"`
	MainGeneration *NamedApiResource  `json:"main_generation"`
	Name           string             `json:"name"`
	Names          []Name             `json:"names"`
	Pokedexes      []NamedApiResource `json:"pokedexes"`
	VersionGroups  []NamedApiResource `json:"version_groups"`
}

type MoveTarget struct {
	Descriptions []Description      `json:"descriptions"`
	ID           int64              `json:"id"`
	Moves        []NamedApiResource `json:"moves"`
	Name         string             `json:"name"`
	Names        []Name             `json:"names"`
}

type PalParkArea struct {
	ID                int64  `json:"id"`
	Name              string `json:"name"`
	Names             []Name `json:"names"`
	PokemonEncounters []struct {
		BaseScore      int64            `json:"base_score"`
		PokemonSpecies NamedApiResource `json:"pokemon_species"`
		Rate           int64            `json:"rate"`
	} `json:"pokemon_encounters"`
}

type ApiResource struct {
	URL string `json:"url"`
}

type Stat struct {
	AffectingMoves struct {
		Decrease []struct {
			Change int64            `json:"change"`
			Move   NamedApiResource `json:"move"`
		} `json:"decrease"`
		Increase []struct {
			Change int64            `json:"change"`
			Move   NamedApiResource `json:"move"`
		} `json:"increase"`
	} `json:"affecting_moves"`
	AffectingNatures struct {
		Decrease []NamedApiResource `json:"decrease"`
		Increase []NamedApiResource `json:"increase"`
	} `json:"affecting_natures"`
	Characteristics []ApiResource     `json:"characteristics"`
	GameIndex       int64             `json:"game_index"`
	ID              int64             `json:"id"`
	IsBattleOnly    bool              `json:"is_battle_only"`
	MoveDamageClass *NamedApiResource `json:"move_damage_class"`
	Name            string            `json:"name"`
	Names           []Name            `json:"names"`
}

type VersionEncounterDetail struct {
	EncounterDetails []Encounter      `json:"encounter_details"`
	MaxChance        int64            `json:"max_chance"`
	Version          NamedApiResource `json:"version"`
}

type V2 struct {
	Ability                 string `json:"ability"`
	Berry                   string `json:"berry"`
	BerryFirmness           string `json:"berry-firmness"`
	BerryFlavor             string `json:"berry-flavor"`
	Characteristic          string `json:"characteristic"`
	ContestEffect           string `json:"contest-effect"`
	ContestType             string `json:"contest-type"`
	EggGroup                string `json:"egg-group"`
	EncounterCondition      string `json:"encounter-condition"`
	EncounterConditionValue string `json:"encounter-condition-value"`
	EncounterMethod         string `json:"encounter-method"`
	EvolutionChain          string `json:"evolution-chain"`
	EvolutionTrigger        string `json:"evolution-trigger"`
	Gender                  string `json:"gender"`
	Generation              string `json:"generation"`
	GrowthRate              string `json:"growth-rate"`
	Item                    string `json:"item"`
	ItemAttribute           string `json:"item-attribute"`
	ItemCategory            string `json:"item-category"`
	ItemFlingEffect         string `json:"item-fling-effect"`
	ItemPocket              string `json:"item-pocket"`
	Language                string `json:"language"`
	Location                string `json:"location"`
	LocationArea            string `json:"location-area"`
	Machine                 string `json:"machine"`
	Move                    string `json:"move"`
	MoveAilment             string `json:"move-ailment"`
	MoveBattleStyle         string `json:"move-battle-style"`
	MoveCategory            string `json:"move-category"`
	MoveDamageClass         string `json:"move-damage-class"`
	MoveLearnMethod         string `json:"move-learn-method"`
	MoveTarget              string `json:"move-target"`
	Nature                  string `json:"nature"`
	PalParkArea             string `json:"pal-park-area"`
	PokeathlonStat          string `json:"pokeathlon-stat"`
	Pokedex                 string `json:"pokedex"`
	Pokemon                 string `json:"pokemon"`
	PokemonColor            string `json:"pokemon-color"`
	PokemonForm             string `json:"pokemon-form"`
	PokemonHabitat          string `json:"pokemon-habitat"`
	PokemonShape            string `json:"pokemon-shape"`
	PokemonSpecies          string `json:"pokemon-species"`
	Region                  string `json:"region"`
	Stat                    string `json:"stat"`
	SuperContestEffect      string `json:"super-contest-effect"`
	Type                    string `json:"type"`
	Version                 string `json:"version"`
	VersionGroup            string `json:"version-group"`
}

type PokemonHabitat struct {
	ID             int64              `json:"id"`
	Name           string             `json:"name"`
	Names          []Name             `json:"names"`
	PokemonSpecies []NamedApiResource `json:"pokemon_species"`
}

type Encounters []struct {
	LocationArea   NamedApiResource         `json:"location_area"`
	VersionDetails []VersionEncounterDetail `json:"version_details"`
}

type Pokemon struct {
	Abilities []struct {
		Ability  NamedApiResource `json:"ability"`
		IsHidden bool             `json:"is_hidden"`
		Slot     int64            `json:"slot"`
	} `json:"abilities"`
	BaseExperience *int64 `json:"base_experience"`
	Cries          struct {
		Latest string  `json:"latest"`
		Legacy *string `json:"legacy"`
	} `json:"cries"`
	Forms       []NamedApiResource `json:"forms"`
	GameIndices []VersionGameIndex `json:"game_indices"`
	Height      int64              `json:"height"`
	HeldItems   []struct {
		Item           NamedApiResource `json:"item"`
		VersionDetails []struct {
			Rarity  int64            `json:"rarity"`
			Version NamedApiResource `json:"version"`
		} `json:"version_details"`
	} `json:"held_items"`
	ID                     int64  `json:"id"`
	IsDefault              bool   `json:"is_default"`
	LocationAreaEncounters string `json:"location_area_encounters"`
	Moves                  []struct {
		Move                NamedApiResource `json:"move"`
		VersionGroupDetails []struct {
			LevelLearnedAt  int64            `json:"level_learned_at"`
			MoveLearnMethod NamedApiResource `json:"move_learn_method"`
			VersionGroup    NamedApiResource `json:"version_group"`
		} `json:"version_group_details"`
	} `json:"moves"`
	Name          string `json:"name"`
	Order         int64  `json:"order"`
	PastAbilities []struct {
		Abilities []struct {
			Ability  NamedApiResource `json:"ability"`
			IsHidden bool             `json:"is_hidden"`
			Slot     int64            `json:"slot"`
		} `json:"abilities"`
		Generation NamedApiResource `json:"generation"`
	} `json:"past_abilities"`
	PastTypes []struct {
		Generation NamedApiResource `json:"generation"`
		Types      []struct {
			Slot int64            `json:"slot"`
			Type NamedApiResource `json:"type"`
		} `json:"types"`
	} `json:"past_types"`
	Species NamedApiResource `json:"species"`
	Sprites struct {
		BackDefault      *string `json:"back_default"`
		BackFemale       *string `json:"back_female"`
		BackShiny        *string `json:"back_shiny"`
		BackShinyFemale  *string `json:"back_shiny_female"`
		FrontDefault     *string `json:"front_default"`
		FrontFemale      *string `json:"front_female"`
		FrontShiny       *string `json:"front_shiny"`
		FrontShinyFemale *string `json:"front_shiny_female"`
		Other            struct {
			DreamWorld struct {
				FrontDefault *string `json:"front_default"`
				FrontFemale  *string `json:"front_female"`
			} `json:"dream_world"`
			Home struct {
				FrontDefault     *string `json:"front_default"`
				FrontFemale      *string `json:"front_female"`
				FrontShiny       *string `json:"front_shiny"`
				FrontShinyFemale *string `json:"front_shiny_female"`
			} `json:"home"`
			OfficialArtwork struct {
				FrontDefault *string `json:"front_default"`
				FrontShiny   *string `json:"front_shiny"`
			} `json:"official-artwork"`
			Showdown struct {
				BackDefault      *string  `json:"back_default"`
				BackFemale       *string  `json:"back_female"`
				BackShiny        *string  `json:"back_shiny"`
				BackShinyFemale  struct{} `json:"back_shiny_female"`
				FrontDefault     *string  `json:"front_default"`
				FrontFemale      *string  `json:"front_female"`
				FrontShiny       *string  `json:"front_shiny"`
				FrontShinyFemale *string  `json:"front_shiny_female"`
			} `json:"showdown"`
		} `json:"other"`
		Versions struct {
			GenerationI struct {
				RedBlue struct {
					BackDefault      *string `json:"back_default"`
					BackGray         *string `json:"back_gray"`
					BackTransparent  *string `json:"back_transparent"`
					FrontDefault     *string `json:"front_default"`
					FrontGray        *string `json:"front_gray"`
					FrontTransparent *string `json:"front_transparent"`
				} `json:"red-blue"`
				Yellow struct {
					BackDefault      *string `json:"back_default"`
					BackGray         *string `json:"back_gray"`
					BackTransparent  *string `json:"back_transparent"`
					FrontDefault     *string `json:"front_default"`
					FrontGray        *string `json:"front_gray"`
					FrontTransparent *string `json:"front_transparent"`
				} `json:"yellow"`
			} `json:"generation-i"`
			GenerationIi struct {
				Crystal struct {
					BackDefault           *string `json:"back_default"`
					BackShiny             *string `json:"back_shiny"`
					BackShinyTransparent  *string `json:"back_shiny_transparent"`
					BackTransparent       *string `json:"back_transparent"`
					FrontDefault          *string `json:"front_default"`
					FrontShiny            *string `json:"front_shiny"`
					FrontShinyTransparent *string `json:"front_shiny_transparent"`
					FrontTransparent      *string `json:"front_transparent"`
				} `json:"crystal"`
				Gold struct {
					BackDefault      *string `json:"back_default"`
					BackShiny        *string `json:"back_shiny"`
					FrontDefault     *string `json:"front_default"`
					FrontShiny       *string `json:"front_shiny"`
					FrontTransparent *string `json:"front_transparent"`
				} `json:"gold"`
				Silver struct {
					BackDefault      *string `json:"back_default"`
					BackShiny        *string `json:"back_shiny"`
					FrontDefault     *string `json:"front_default"`
					FrontShiny       *string `json:"front_shiny"`
					FrontTransparent *string `json:"front_transparent"`
				} `json:"silver"`
			} `json:"generation-ii"`
			GenerationIii struct {
				Emerald struct {
					FrontDefault *string `json:"front_default"`
					FrontShiny   *string `json:"front_shiny"`
				} `json:"emerald"`
				FireredLeafgreen struct {
					BackDefault  *string `json:"back_default"`
					BackShiny    *string `json:"back_shiny"`
					FrontDefault *string `json:"front_default"`
					FrontShiny   *string `json:"front_shiny"`
				} `json:"firered-leafgreen"`
				RubySapphire struct {
					BackDefault  *string `json:"back_default"`
					BackShiny    *string `json:"back_shiny"`
					FrontDefault *string `json:"front_default"`
					FrontShiny   *string `json:"front_shiny"`
				} `json:"ruby-sapphire"`
			} `json:"generation-iii"`
			GenerationIv struct {
				DiamondPearl struct {
					BackDefault      *string `json:"back_default"`
					BackFemale       *string `json:"back_female"`
					BackShiny        *string `json:"back_shiny"`
					BackShinyFemale  *string `json:"back_shiny_female"`
					FrontDefault     *string `json:"front_default"`
					FrontFemale      *string `json:"front_female"`
					FrontShiny       *string `json:"front_shiny"`
					FrontShinyFemale *string `json:"front_shiny_female"`
				} `json:"diamond-pearl"`
				HeartgoldSoulsilver struct {
					BackDefault      *string `json:"back_default"`
					BackFemale       *string `json:"back_female"`
					BackShiny        *string `json:"back_shiny"`
					BackShinyFemale  *string `json:"back_shiny_female"`
					FrontDefault     *string `json:"front_default"`
					FrontFemale      *string `json:"front_female"`
					FrontShiny       *string `json:"front_shiny"`
					FrontShinyFemale *string `json:"front_shiny_female"`
				} `json:"heartgold-soulsilver"`
				Platinum struct {
					BackDefault      *string `json:"back_default"`
					BackFemale       *string `json:"back_female"`
					BackShiny        *string `json:"back_shiny"`
					BackShinyFemale  *string `json:"back_shiny_female"`
					FrontDefault     *string `json:"front_default"`
					FrontFemale      *string `json:"front_female"`
					FrontShiny       *string `json:"front_shiny"`
					FrontShinyFemale *string `json:"front_shiny_female"`
				} `json:"platinum"`
			} `json:"generation-iv"`
			GenerationV struct {
				BlackWhite struct {
					Animated struct {
						BackDefault      *string `json:"back_default"`
						BackFemale       *string `json:"back_female"`
						BackShiny        *string `json:"back_shiny"`
						BackShinyFemale  *string `json:"back_shiny_female"`
						FrontDefault     *string `json:"front_default"`
						FrontFemale      *string `json:"front_female"`
						FrontShiny       *string `json:"front_shiny"`
						FrontShinyFemale *string `json:"front_shiny_female"`
					} `json:"animated"`
					BackDefault      *string `json:"back_default"`
					BackFemale       *string `json:"back_female"`
					BackShiny        *string `json:"back_shiny"`
					BackShinyFemale  *string `json:"back_shiny_female"`
					FrontDefault     *string `json:"front_default"`
					FrontFemale      *string `json:"front_female"`
					FrontShiny       *string `json:"front_shiny"`
					FrontShinyFemale *string `json:"front_shiny_female"`
				} `json:"black-white"`
			} `json:"generation-v"`
			GenerationVi struct {
				OmegarubyAlphasapphire struct {
					FrontDefault     *string `json:"front_default"`
					FrontFemale      *string `json:"front_female"`
					FrontShiny       *string `json:"front_shiny"`
					FrontShinyFemale *string `json:"front_shiny_female"`
				} `json:"omegaruby-alphasapphire"`
				XY struct {
					FrontDefault     *string `json:"front_default"`
					FrontFemale      *string `json:"front_female"`
					FrontShiny       *string `json:"front_shiny"`
					FrontShinyFemale *string `json:"front_shiny_female"`
				} `json:"x-y"`
			} `json:"generation-vi"`
			GenerationVii struct {
				Icons struct {
					FrontDefault *string `json:"front_default"`
					FrontFemale  *string `json:"front_female"`
				} `json:"icons"`
				UltraSunUltraMoon struct {
					FrontDefault     *string `json:"front_default"`
					FrontFemale      *string `json:"front_female"`
					FrontShiny       *string `json:"front_shiny"`
					FrontShinyFemale *string `json:"front_shiny_female"`
				} `json:"ultra-sun-ultra-moon"`
			} `json:"generation-vii"`
			GenerationViii struct {
				Icons struct {
					FrontDefault *string `json:"front_default"`
					FrontFemale  *string `json:"front_female"`
				} `json:"icons"`
			} `json:"generation-viii"`
		} `json:"versions"`
	} `json:"sprites"`
	Stats []struct {
		BaseStat int64            `json:"base_stat"`
		Effort   int64            `json:"effort"`
		Stat     NamedApiResource `json:"stat"`
	} `json:"stats"`
	Types []struct {
		Slot int64            `json:"slot"`
		Type NamedApiResource `json:"type"`
	} `json:"types"`
	Weight int64 `json:"weight"`
}

type VersionGameIndex struct {
	GameIndex int64            `json:"game_index"`
	Version   NamedApiResource `json:"version"`
}

type MoveCategory struct {
	Descriptions []Description      `json:"descriptions"`
	ID           int64              `json:"id"`
	Moves        []NamedApiResource `json:"moves"`
	Name         string             `json:"name"`
}
